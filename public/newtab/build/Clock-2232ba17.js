
(function(l, r) { if (l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (window.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(window.document);
import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, o as onMount, e as element, t as text, a as space, b as attr_dev, c as add_location, f as insert_dev, g as append_dev, h as set_data_dev, n as noop, j as detach_dev } from './main-ddcf7bf5.js';

/* src/newtab/components/Clock.svelte generated by Svelte v3.35.0 */
const file = "src/newtab/components/Clock.svelte";

function create_fragment(ctx) {
	let article;
	let h2;
	let t0;
	let t1;
	let p;
	let t2;

	const block = {
		c: function create() {
			article = element("article");
			h2 = element("h2");
			t0 = text(/*time*/ ctx[1]);
			t1 = space();
			p = element("p");
			t2 = text(/*date*/ ctx[0]);
			attr_dev(h2, "class", "emphasis svelte-1q19plu");
			add_location(h2, file, 33, 1, 524);
			attr_dev(p, "class", "subtitle1 hint");
			add_location(p, file, 34, 1, 558);
			attr_dev(article, "class", "svelte-1q19plu");
			add_location(article, file, 32, 0, 513);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, article, anchor);
			append_dev(article, h2);
			append_dev(h2, t0);
			append_dev(article, t1);
			append_dev(article, p);
			append_dev(p, t2);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*time*/ 2) set_data_dev(t0, /*time*/ ctx[1]);
			if (dirty & /*date*/ 1) set_data_dev(t2, /*date*/ ctx[0]);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(article);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Clock", slots, []);
	let date;
	let time;

	// -- Initialization -- \\
	onMount(async () => {
		update();
	});

	// -- Functions -- \\
	async function update() {
		const d = new Date();

		$$invalidate(0, date = new Intl.DateTimeFormat("en-GB",
		{
				month: "long",
				day: "numeric",
				weekday: "long"
			}).format(d));

		$$invalidate(1, time = new Intl.DateTimeFormat("en-GB", { hour: "numeric", minute: "numeric" }).format(d));

		setTimeout(
			() => {
				update();
			},
			5000
		);
	}

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Clock> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ onMount, date, time, update });

	$$self.$inject_state = $$props => {
		if ("date" in $$props) $$invalidate(0, date = $$props.date);
		if ("time" in $$props) $$invalidate(1, time = $$props.time);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [date, time];
}

class Clock extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Clock",
			options,
			id: create_fragment.name
		});
	}
}

export default Clock;
//# sourceMappingURL=Clock-2232ba17.js.map
